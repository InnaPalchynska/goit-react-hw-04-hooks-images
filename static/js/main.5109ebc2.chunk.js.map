{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/modal/Modal.js","components/Services/api.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","ImageGalleryItem","key","src","tags","onClick","alt","currentTarget","ImageGallery","images","map","img","webformatURL","id","Button","modalRoot","document","querySelector","Modal","modalImage","reactDom","createPortal","page","a","axios","defaults","baseURL","params","image_type","orientation","per_page","get","q","data","App","setImages","setPage","loader","setLoader","openModal","setOpenModal","setModalImage","handleKeyDown","code","toggleModal","getImages","getImagesApi","then","hits","finally","smoothScroll","window","scrollTo","top","documentElement","scrollHeight","behavior","prevState","useEffect","addEventListener","removeEventListener","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5109ebc2.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(query);\r\n    // reset();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const query = e.target.value;\r\n    setQuery(query);\r\n  };\r\n\r\n  const reset = () => {\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","function ImageGalleryItem({ key, src, tags, onClick }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" key={key}>\r\n      <img\r\n        src={src}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={e => onClick(e.currentTarget)}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images, onClick }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images &&\r\n        images.map(img => (\r\n          <ImageGalleryItem\r\n            key={img.id}\r\n            src={img.webformatURL}\r\n            tags={img.tags}\r\n            onClick={onClick}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={() => onClick()}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import reactDom from 'react-dom';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ modalImage, onClick }) {\r\n  return reactDom.createPortal(\r\n    <div className=\"Overlay\" onClick={e => onClick(e)}>\r\n      <div className=\"Modal\">\r\n        <img src={modalImage.src} alt={modalImage.alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\n\r\nexport default async function getImagesApi(query, page) {\r\n  axios.defaults.baseURL = `https://pixabay.com/api/`;\r\n  axios.defaults.params = {\r\n    key: '21988009-297d867560bf729bce41e20bb',\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    per_page: 12,\r\n  };\r\n\r\n  const { data } = await axios.get('', {\r\n    params: {\r\n      q: query,\r\n      page,\r\n    },\r\n  });\r\n\r\n  return data;\r\n}\r\n","import { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport Modal from './components/modal/Modal';\n\nimport getImagesApi from './components/Services/api';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [loader, setLoader] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n\n  const handleAddQuery = q => {\n    setQuery(q);\n  };\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      toggleModal();\n    }\n  };\n\n  const getImages = () => {\n    getImagesApi(query, page)\n      .then(data => setImages([...images, ...data.hits]))\n      .finally(() => {\n        setLoader(false);\n        smoothScroll();\n      });\n  };\n\n  const toNextPage = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const smoothScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const toggleModal = () => {\n    setOpenModal(prevState => !prevState);\n  };\n\n  const handleOnClick = e => {\n    setModalImage(e);\n    toggleModal();\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      toggleModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setImages([]);\n    setPage(1);\n    getImages(query, page);\n  }, [query]);\n\n  useEffect(() => {\n    if (!query && page === 1) {\n      return;\n    }\n    getImages(query, page);\n  }, [page]);\n\n  return (\n    <>\n      {loader && <Loader type=\"Bars\" color=\"#3f51b5\" height={80} width={80} />}\n      <Searchbar onSubmit={handleAddQuery} />\n      {images && <ImageGallery images={images} onClick={handleOnClick} />}\n      {images.length > 0 && <Button onClick={toNextPage} />}\n      {openModal && (\n        <Modal onClick={handleBackdropClick} modalImage={modalImage} />\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}